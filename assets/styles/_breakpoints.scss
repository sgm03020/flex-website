// 独自breakpoints専用のcsss
// vuetifyにはデフォルトで$grid-breakpointsがセットされている
// xs:0, sm: 600px, md: 960px, lg: 1280px, xl: 1920px
// 一方dpc2サンプルではbootstrapになっており、数値が異なる
// このscssファイルでは、vuetifyのbreakpointsをbootstrapの値に再設定する

// これを利用する場所
// 1) assets/variables.scss
//    vuetify全体のbreakpointsの設定を書くと
//    vuetifyにより以下のようなクラスが作成される
//    @media (min-width: 1200px) {
//      .container {
//      max-width: 1140px;
//    }}
//    などを作成させる
// 2) これは作成されるのだが、PCブラウザのブラウザでウィンドサイズを変える場合に
//    max-widthがsmの値のままとなり、mdやlgの値に切り替わらない現象となった
//    bootstrapではこれがちゃんと作用する
//    出来上がったcssの書き込み順序の問題とも思われたが、これを回避する術が見つからなかった
//　　そこでbootstrapによって作られたコードをそのまま使うことにした
//    元ソースは _grid.scssだが、dpc2でのコンパイル結果は
//    For each breakpoint, define the maximum width of the container in a media query
//    @mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
//      @each $breakpoint, $container-max-width in $max-widths {
//        @include media-breakpoint-up($breakpoint, $breakpoints) {
//          max-width: $container-max-width;
//        }
//      }
//    }
//    である
//    これを移植する

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
); //!default;
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
); //!default;


@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


@mixin make-container-max-widths(
  $max-widths: $container-max-widths,
  $breakpoints: $grid-breakpoints
) {
  @each $breakpoint, $container-max-width in $max-widths {
    // up, downで動作がどう違うのか -> downだと(max-width: 1199.98px)
    // max-width: 960px;が優先される
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}
